{"version":3,"sources":["../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","components/Table/utils.tsx","components/Table/index.tsx","../node_modules/@material-ui/core/esm/TableContainer/TableContainer.js","pages/Table/index.tsx"],"names":["defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","React","forwardRef","props","ref","_props$align","align","classes","className","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","createElement","_extends","clsx","root","concat","capitalize","withStyles","theme","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","TableContext","createContext","Table","_props$component","_props$padding","padding","_props$size","size","_props$stickyHeader","stickyHeader","table","useMemo","Provider","value","borderCollapse","borderSpacing","spacing","captionSide","Tablelvl2Context","TableRow","_props$hover","hover","_props$selected","selected","tablelvl2","useContext","head","footer","verticalAlign","outline","backgroundColor","action","fade","selectedOpacity","TableHead","TableBody","TableCell","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","ariaSort","borderBottom","type","lighten","divider","darken","lineHeight","pxToRem","fontWeight","fontWeightMedium","body","fontSize","sizeSmall","paddingRight","paddingLeft","paddingCheckbox","paddingNone","flexDirection","top","left","zIndex","background","default","renderBody","data","columns","map","record","index","rowKey","key","renderCellContent","columnKey","content","renderCell","renderRow","memo","tableProps","tableHeadProps","renderHeaderContent","cellContent","renderHeader","displayName","TableContainer","overflowX","genderMapping","male","female","gender","id","TablePage","MuiPaper"],"mappings":"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","file":"static/js/5.709823c6.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different DOM element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar Table = React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'table' : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return React.createElement(TableContext.Provider, {\n    value: table\n  }, React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected,&$selected:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'tr' : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      head: classes.head,\n      footer: classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar TableHead = React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'thead' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar TableBody = React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'tbody' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0px 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var Component;\n\n  if (component) {\n    Component = component;\n  } else {\n    Component = tablelvl2 && tablelvl2.variant === 'head' ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && tablelvl2 && tablelvl2.variant === 'head') {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], {\n      head: table && table.stickyHeader && classes.stickyHeader\n    }[variant]),\n    \"aria-sort\": ariaSort,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['head', 'body', 'footer'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import React from 'react';\nimport MuiTableCell from '@material-ui/core/TableCell';\nimport MuiTableRow from '@material-ui/core/TableRow';\nimport { ColumnOptionsList, ColumnOptions } from './index';\n\nexport function renderBody<TRecord>(\n  data: Array<TRecord>,\n  columns: ColumnOptionsList<TRecord>,\n) {\n  return data.map((record, index) =>\n    renderRow(`tr-${index}`, columns, record, index),\n  );\n}\n\nexport function renderRow<TRecord>(\n  rowKey: React.Key,\n  columns: ColumnOptionsList<TRecord>,\n  record: TRecord,\n  index: number,\n) {\n  return (\n    <MuiTableRow key={rowKey}>\n      {columns.map(\n        ({ renderCellContent, key: columnKey }: ColumnOptions<TRecord>) => {\n          const content = renderCellContent\n            ? renderCellContent(record, index)\n            : record[columnKey as keyof TRecord];\n          return renderCell(`td-${rowKey}-${columnKey}`, content);\n        },\n      )}\n    </MuiTableRow>\n  );\n}\n\nexport function renderHeader<TRecord>(columns: ColumnOptionsList<TRecord>) {\n  return columns.map(({ key, name, renderHeaderContent }) => {\n    const cellContent = renderHeaderContent ? renderHeaderContent() : name;\n    return renderCell(`th-${key}`, cellContent);\n  });\n}\n\nexport function renderCell(key: React.Key, content: React.ReactNode) {\n  return <MuiTableCell key={key}>{content}</MuiTableCell>;\n}\n","import React from 'react';\nimport MuiTable, { TableProps as MuiTableProps } from '@material-ui/core/Table';\nimport MuiTableRow from '@material-ui/core/TableRow';\nimport MuiTableHead, {\n  TableHeadProps as MuiTableHeadProps,\n} from '@material-ui/core/TableHead';\nimport MuiTableBody from '@material-ui/core/TableBody';\nimport { TableCellProps } from '@material-ui/core/TableCell';\n\nimport { renderHeader, renderBody } from './utils';\n\nexport function TableComponent<TRecord>(props: TableProps<TRecord>) {\n  const { data, columns, tableProps, tableHeadProps } = props;\n  return (\n    <MuiTable {...tableProps}>\n      <MuiTableHead {...tableHeadProps}>\n        <MuiTableRow>{renderHeader(columns)}</MuiTableRow>\n      </MuiTableHead>\n      <MuiTableBody>{renderBody(data, columns)}</MuiTableBody>\n    </MuiTable>\n  );\n}\n\nconst Table = React.memo(TableComponent) as typeof TableComponent &\n  React.ComponentType<any>;\nTable.displayName = 'Table';\n\nexport default Table;\n\nexport interface TableProps<TRecord> {\n  data: Array<TRecord>;\n  columns: ColumnOptionsList<TRecord>;\n  tableProps?: ExcludeChildren<MuiTableProps>;\n  tableHeadProps?: ExcludeChildren<MuiTableHeadProps>;\n}\n\nexport interface ColumnOptions<TRecord> {\n  key: keyof TRecord | string;\n  name: React.ReactNode;\n  cellProps?: Partial<TableCellProps>;\n  cellHeadProps?: Partial<TableCellProps>;\n  renderCellContent?: ColumnRenderer<TRecord>;\n  renderHeaderContent?: HeaderRenderer;\n}\n\nexport type ColumnOptionsList<TRecord> = Array<ColumnOptions<TRecord>>;\nexport type ColumnRenderer<TRecord> = (\n  record: TRecord,\n  index: number,\n) => React.ReactNode;\nexport type HeaderRenderer = () => React.ReactNode;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nvar TableContainer = React.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Table, { ColumnOptionsList } from 'components/Table';\nimport MuiTableContainer from '@material-ui/core/TableContainer';\nimport MuiPaper from '@material-ui/core/Paper';\n\ntype Gender = 'female' | 'male';\n\ninterface TRecord {\n  id: number;\n  name: string;\n  gender: Gender;\n}\n\nconst genderMapping: Record<Gender, string> = {\n  male: '💪',\n  female: '💅',\n};\n\nconst columns: ColumnOptionsList<TRecord> = [\n  {\n    key: 'stt',\n    name: 'STT',\n    renderCellContent: (record, index) => index + 1,\n  },\n  { key: 'name', name: 'Name' },\n  {\n    key: 'gender',\n    name: 'Gender',\n    renderCellContent: (record) => genderMapping[record.gender],\n  },\n];\n\nconst data: Array<TRecord> = [\n  { id: 1, name: 'Nguyen Tan Phat', gender: 'male' },\n  { id: 2, name: 'Nguyen Tan Tai', gender: 'male' },\n  { id: 2, name: 'Nguyen Thi Gai', gender: 'female' },\n];\n\nconst TablePage = () => {\n  return (\n    <div>\n      <Typography variant=\"h5\">Table Page</Typography>\n      <MuiTableContainer component={MuiPaper}>\n        <Table columns={columns} data={data} />\n      </MuiTableContainer>\n    </div>\n  );\n};\n\nexport default TablePage;\n"],"sourceRoot":""}