{"version":3,"sources":["hooks/useLocalStorage.ts","theme/overrides/index.ts","theme/overrides/MuiTableHead.ts","theme/overrides/MuiTableCell.ts","theme/index.ts","constants/pages.ts","App.tsx","serviceWorker.ts","index.tsx","components/CustomSelect/index.tsx","components/CustomSelect/styles.ts","components/CustomSelect/hooks.ts","components/CustomSelect/utils.ts","components/Loading/styles.ts","components/Loading/index.tsx","components/CustomSelect/CustomMultipleSelect/styles.ts","components/CustomSelect/CustomMultipleSelect/index.tsx","logo.svg"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","String","setItem","stringify","MuiTableHead","root","backgroundColor","MuiTableCell","head","fontWeight","color","theme","createMuiTheme","overrides","pages","foo","component","React","lazy","name","loading","table","CustomSelect","Object","keys","PAGES","map","label","DEFAULT_PAGE","App","lastPage","setLastPage","lastPageItem","useMemo","find","page","setPage","onChangePage","useCallback","selected","Page","CssBaseline","className","href","target","rel","src","logo","alt","Grid","container","spacing","alignItems","xs","sm","md","defaultTitle","selection","selectedItem","onChange","Suspense","fallback","Loading","Box","mt","Boolean","location","hostname","match","Sentry","dsn","autoSessionTracking","release","pkg","version","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","DEFAULT_ICONS","closeIcon","openIcon","memo","props","SelectIcons","classes","useStyles","useHandleSelect","open","handleToggle","handleSelectItem","isSelectedItem","stopPropagation","closeSelection","title","onClickAway","selectWrapper","justify","wrap","clsx","selectHeader","onClick","selectHeaderTitle","selectList","isSelected","selectListItem","displayName","makeStyles","createStyles","position","userSelect","width","border","borderRadius","cursor","height","padding","fontSize","lineHeight","overflow","marginRight","whiteSpace","textOverflow","boxShadow","listStyleType","margin","marginTop","maxHeight","overflowY","zIndex","classNamePrefix","useSelect","setOpen","e","defaultSelectedItem","setSelectedItem","item2","every","isEqual","useHandleMultipleSelect","selectedItems","setSelectedItems","toUpdateItems","filter","i","some","push","includes","loadingContainer","left","top","transform","loader","borderTop","palette","primary","main","animation","pill","display","textAlign","CustomMultipleSelect","baseClasses","baseUseStyles","length","firstItem","rest","restLength","selectedLength","ClickAwayListener","module","exports"],"mappings":"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","file":"static/js/main.c35b4cc3.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction useLocalStorage<T>(\n  key: string,\n  initialValue: T\n): [string, (value: T) => void] {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<string>(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      // eslint-disable-next-line no-console\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: T) => {\n    try {\n      // Save state\n      setStoredValue(String(value));\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import MuiTableHead from './MuiTableHead';\nimport MuiTableCell from './MuiTableCell';\n\nexport default {\n  MuiTableHead,\n  MuiTableCell,\n};\n","import { StyleRules } from '@material-ui/core';\nimport { TableHeadClassKey } from '@material-ui/core/TableHead';\n\nconst MuiTableHead: Partial<StyleRules<TableHeadClassKey>> = {\n  root: {\n    backgroundColor: '#000000',\n  },\n};\n\nexport default MuiTableHead;\n","import { StyleRules } from '@material-ui/core';\nimport { TableCellClassKey } from '@material-ui/core/TableCell';\n\nconst MuiTableCell: Partial<StyleRules<TableCellClassKey>> = {\n  head: {\n    fontWeight: 'bold',\n    color: '#ffffff',\n  },\n};\n\nexport default MuiTableCell;\n","import { createMuiTheme } from '@material-ui/core';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  overrides,\n});\n\nexport default theme;\n","import React from 'react';\n\ntype PageProps = {\n  name: string;\n  component: ReactLazyComponent;\n};\n\nconst pages: Record<string, PageProps> = {\n  foo: {\n    component: React.lazy(() => import('pages/Foo')),\n    name: 'Foo Component',\n  },\n  loading: {\n    component: React.lazy(() => import('pages/Loading')),\n    name: 'Loading Component',\n  },\n  table: {\n    component: React.lazy(() => import('pages/Table')),\n    name: 'Table Component',\n  },\n  CustomSelect: {\n    component: React.lazy(() => import('pages/CustomSelect')),\n    name: 'CustomSelect',\n  },\n};\n\nexport default pages;\n","import React from 'react';\n\nimport { MuiThemeProvider } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\n\nimport GitHubCorner from 'react-github-corner';\n\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport theme from 'theme';\nimport PAGES from 'constants/pages';\n\nimport Loading from 'components/Loading';\nimport CustomSelect, { BaseItem } from 'components/CustomSelect';\n\nimport logo from './logo.svg';\nimport './App.css';\n\ninterface PageItem extends BaseItem {\n  component: ReactLazyComponent;\n}\n\nconst pages: Array<PageItem> = Object.keys(PAGES).map((key) => ({\n  value: key,\n  label: PAGES[key].name,\n  component: PAGES[key].component,\n}));\n\nconst DEFAULT_PAGE = pages[0];\n\nconst App: React.FC = () => {\n  const [lastPage, setLastPage] = useLocalStorage('page', DEFAULT_PAGE.value);\n  const lastPageItem = React.useMemo(() => {\n    return pages.find((page) => page.value === lastPage);\n  }, [lastPage]);\n  const [page, setPage] = React.useState(lastPageItem);\n  const onChangePage = React.useCallback(\n    (selected: PageItem) => {\n      setPage(selected);\n      setLastPage(String(selected.value));\n    },\n    [setPage, setLastPage]\n  );\n  const Page = (page || DEFAULT_PAGE).component;\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <a\n            className=\"App-link\"\n            href=\"https://github.com/phatnguyenuit/frontend-tricks\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            Frontend Tricks\n          </a>\n          <GitHubCorner href=\"https://github.com/phatnguyenuit/frontend-tricks\" />\n        </header>\n        <main className=\"App-content\">\n          <Grid container spacing={1} alignItems=\"center\">\n            <Grid item xs=\"auto\">\n              Choose page to show:\n            </Grid>\n            <Grid item xs sm={6} md={2}>\n              <CustomSelect\n                defaultTitle=\"Choose Page\"\n                selection={pages}\n                selectedItem={page}\n                onChange={onChangePage}\n              />\n            </Grid>\n          </Grid>\n          <React.Suspense fallback={<Loading />}>\n            <Box mt={2}>\n              <Page />\n            </Box>\n          </React.Suspense>\n        </main>\n      </div>\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/react';\nimport { Integrations } from '@sentry/tracing';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport pkg from '../package.json';\n\nSentry.init({\n  dsn:\n    'https://d818eead91ee42fdb82bb41b0b8b9d54@o496727.ingest.sentry.io/5571838',\n  autoSessionTracking: true,\n  release: `${pkg.name}@${pkg.version}`,\n  integrations: [new Integrations.BrowserTracing()],\n\n  // We recommend adjusting this value in production, or using tracesSampler\n  // for finer control\n  tracesSampleRate: 1.0,\n});\n\nReactDOM.render(\n  <Sentry.ErrorBoundary fallback=\"An error has occurred\">\n    <App />\n  </Sentry.ErrorBoundary>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useMemo } from 'react';\nimport clsx from 'clsx';\n\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grid from '@material-ui/core/Grid';\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp';\n\nimport { BaseItem, CustomSelectProps, SelectIcons } from './types';\nimport { useHandleSelect } from './hooks';\nimport useStyles from './styles';\n\nexport const DEFAULT_ICONS: SelectIcons = {\n  closeIcon: <KeyboardArrowDown />,\n  openIcon: <KeyboardArrowUp />,\n};\n\nexport function CustomSelectComponent<TItem extends BaseItem>(\n  props: CustomSelectProps<TItem>\n) {\n  const {\n    defaultTitle,\n    selection,\n    SelectIcons: { openIcon, closeIcon } = DEFAULT_ICONS,\n  } = props;\n  const classes = useStyles();\n  const {\n    open,\n    handleToggle,\n    handleSelectItem,\n    isSelectedItem,\n    stopPropagation,\n    closeSelection,\n    selectedItem,\n  } = useHandleSelect(props);\n  const title = useMemo(() => selectedItem?.label || defaultTitle, [\n    defaultTitle,\n    selectedItem,\n  ]);\n\n  return (\n    <ClickAwayListener onClickAway={closeSelection}>\n      <div className={classes.selectWrapper}>\n        <Grid\n          container\n          justify=\"space-between\"\n          wrap=\"nowrap\"\n          className={clsx(classes.selectHeader, {\n            'no-value': !selectedItem,\n          })}\n          onClick={handleToggle}\n        >\n          <Grid item className={classes.selectHeaderTitle}>\n            {title}\n          </Grid>\n          <Grid item xs=\"auto\">\n            {open ? openIcon : closeIcon}\n          </Grid>\n        </Grid>\n        {open && (\n          <ul className={classes.selectList} onClick={stopPropagation}>\n            {selection.map((item: TItem) => {\n              const isSelected = isSelectedItem(item);\n              return (\n                <Grid\n                  container\n                  component=\"li\"\n                  justify={'space-between'}\n                  wrap=\"nowrap\"\n                  alignItems=\"center\"\n                  className={clsx(classes.selectListItem, {\n                    selected: isSelected,\n                  })}\n                  key={`${item.value}-${item.label}`}\n                  onClick={handleSelectItem(item)}\n                >\n                  <Grid item>{item.label}</Grid>\n                </Grid>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n    </ClickAwayListener>\n  );\n}\n\nconst CustomSelect = React.memo(\n  CustomSelectComponent\n) as typeof CustomSelectComponent & React.ComponentType<any>;\nCustomSelect.displayName = 'CustomSelect';\nexport default CustomSelect;\n\nexport * from './types';\nexport { default as CustomMultipleSelect } from './CustomMultipleSelect';\n","import { Theme, createStyles, makeStyles } from '@material-ui/core';\n\nexport const styles = (theme: Theme) =>\n  createStyles({\n    selectWrapper: {\n      position: 'relative',\n      userSelect: 'none',\n      width: '100%',\n    },\n    selectHeader: {\n      backgroundColor: '#f2f3f4',\n      border: '1px solid #cfd2d4',\n      borderRadius: theme.spacing(1 / 2),\n      color: '#3f4b53',\n      cursor: 'default',\n      height: 40,\n      padding: theme.spacing(1, 2),\n      position: 'relative',\n\n      '&.no-value': {\n        color: '#b7bbbf',\n        fontSize: 14,\n        lineHeight: 1.29,\n        overflow: 'hidden',\n      },\n    },\n    selectHeaderTitle: {\n      lineHeight: '24px',\n      marginRight: theme.spacing(1 / 2),\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n    },\n    selectList: {\n      backgroundColor: '#ffffff',\n      borderRadius: theme.spacing(1 / 2),\n      boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.1)',\n      fontWeight: 700,\n      listStyleType: 'none',\n      margin: 0,\n      marginTop: theme.spacing(1),\n      maxHeight: 300,\n      overflowY: 'auto',\n      padding: 0,\n      position: 'absolute',\n      width: '100%',\n      zIndex: 10,\n    },\n    selectListItem: {\n      width: '100%',\n      fontSize: 14,\n      padding: theme.spacing(2),\n      lineHeight: 1.29,\n      color: '#6f787e',\n      cursor: 'default',\n      height: '48px',\n      backgroundColor: '#ffffff',\n      '&:hover': {\n        backgroundColor: '#f2f3f4',\n      },\n      '& > div': {\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n      },\n      '&.selected': {\n        color: '#3f4b53',\n        backgroundColor: '#f2f3f4',\n      },\n    },\n  });\n\nexport default makeStyles(styles, { classNamePrefix: 'CustomSelect' });\n","import { useState, useCallback } from 'react';\nimport {\n  BaseItem,\n  CustomSelectProps,\n  CustomMultipleSelectProps,\n} from './types';\nimport { isEqual } from './utils';\n\nexport const useSelect = () => {\n  const [open, setOpen] = useState(false);\n  const handleToggle = useCallback(() => {\n    setOpen(!open);\n  }, [open]);\n\n  const stopPropagation = useCallback<\n    React.MouseEventHandler<HTMLUListElement>\n  >((e) => e.stopPropagation(), []);\n  const closeSelection = useCallback(() => setOpen(false), []);\n\n  return {\n    open,\n    setOpen,\n    handleToggle,\n    closeSelection,\n    stopPropagation,\n  };\n};\n\nexport const useHandleSelect = <TItem extends BaseItem>(\n  props: CustomSelectProps<TItem>\n) => {\n  const { onChange, selectedItem: defaultSelectedItem } = props;\n  const {\n    open,\n    setOpen,\n    handleToggle,\n    closeSelection,\n    stopPropagation,\n  } = useSelect();\n  const [\n    selectedItem = defaultSelectedItem,\n    setSelectedItem,\n  ] = useState<TItem>();\n  const handleSelectItem = useCallback(\n    (item: TItem) => () => {\n      setOpen(false);\n      setSelectedItem(item);\n      onChange(item);\n    },\n    [onChange, setOpen]\n  );\n  const isSelectedItem = useCallback(\n    (item: TItem) => isEqual(item, selectedItem),\n    [selectedItem]\n  );\n  return {\n    open,\n    selectedItem,\n    isSelectedItem,\n    setOpen,\n    handleToggle,\n    handleSelectItem,\n    closeSelection,\n    stopPropagation,\n  };\n};\n\nexport const useHandleMultipleSelect = <TItem extends BaseItem>(\n  props: CustomMultipleSelectProps<TItem>\n) => {\n  const { onChange, selectedItem: defaultSelectedItem = [] } = props;\n  const {\n    open,\n    setOpen,\n    handleToggle,\n    closeSelection,\n    stopPropagation,\n  } = useSelect();\n  const [selectedItems = [], setSelectedItems] = useState<Array<TItem>>(\n    defaultSelectedItem\n  );\n  const handleSelectItem = useCallback(\n    (item: TItem, selected: boolean = false) => () => {\n      let toUpdateItems = [...selectedItems];\n      if (selected) {\n        toUpdateItems = toUpdateItems.filter((i) =>\n          [i.label !== item.label, i.value !== item.value].some(Boolean)\n        );\n      } else {\n        toUpdateItems.push(item);\n      }\n      setSelectedItems(toUpdateItems);\n      onChange(toUpdateItems);\n    },\n    [onChange, selectedItems]\n  );\n  const isSelectedItem = useCallback(\n    (item: TItem) => {\n      return selectedItems.includes(item);\n    },\n    [selectedItems]\n  );\n  return {\n    open,\n    selectedItems,\n    isSelectedItem,\n    setOpen,\n    handleToggle,\n    handleSelectItem,\n    closeSelection,\n    stopPropagation,\n  };\n};\n","import { BaseItem } from './types';\n\nexport const isEqual = <TItem extends BaseItem>(item: TItem, item2?: TItem) => {\n  if (!item2) return false;\n  return [item.label === item2.label, item.value === item2.value].every(\n    Boolean\n  );\n};\n","import { Theme, createStyles, makeStyles } from '@material-ui/core';\n\nexport const styles = (theme: Theme) =>\n  createStyles({\n    loadingContainer: {\n      left: '50%',\n      position: 'absolute',\n      top: '50%',\n      transform: 'translate(-50%, -50%)',\n    },\n    loader: {\n      border: '3px solid #cfd2d4',\n      borderRadius: '50%',\n      borderTop: `3px solid ${theme.palette.primary.main}`,\n      width: '64px',\n      height: '64px',\n      animation: '$spin 2s linear infinite',\n    },\n    '@keyframes spin': {\n      '0%': { transform: 'rotate(0deg)' },\n      '100%': { transform: 'rotate(1turn)' },\n    },\n  });\n\nexport default makeStyles(styles, { classNamePrefix: 'Loading' });\n","import React from 'react';\nimport useStyles from './styles';\n\nexport const LoadingCompoent = () => {\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.loadingContainer}>\n        <div className={classes.loader}></div>\n      </div>\n    </div>\n  );\n};\n\nconst Loading = React.memo(LoadingCompoent);\nLoading.displayName = 'Loading';\n\nexport default Loading;\n","import { Theme, createStyles, makeStyles } from '@material-ui/core';\n\nexport const styles = (theme: Theme) =>\n  createStyles({\n    pill: {\n      width: '100%',\n      backgroundColor: '#cfd2d4',\n      borderRadius: theme.spacing(1 / 2),\n      display: 'inline-block',\n      fontSize: 12,\n      fontWeight: 'bold',\n      lineHeight: 1.33,\n      overflow: 'hidden',\n      padding: theme.spacing(1 / 2, 1),\n      textAlign: 'center',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      '&.pill-primary': {\n        backgroundColor: theme.palette.primary.main,\n        fontWeight: 'bold',\n        color: '#ffffff',\n      },\n    },\n  });\n\nexport default makeStyles(styles, { classNamePrefix: 'CustomMultipleSelect' });\n","import React, { useMemo } from 'react';\nimport clsx from 'clsx';\n\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grid from '@material-ui/core/Grid';\n\nimport { BaseItem, CustomMultipleSelectProps } from '../types';\nimport { DEFAULT_ICONS } from '../index';\nimport { useHandleMultipleSelect } from '../hooks';\nimport useStyles from './styles';\nimport baseUseStyles from '../styles';\n\nexport function CustomMultipleSelectComponent<TItem extends BaseItem>(\n  props: CustomMultipleSelectProps<TItem>\n) {\n  const {\n    defaultTitle,\n    selection,\n    SelectIcons: { openIcon, closeIcon } = DEFAULT_ICONS,\n  } = props;\n  const baseClasses = baseUseStyles();\n  const classes = useStyles();\n  const {\n    open,\n    selectedItems,\n    handleToggle,\n    handleSelectItem,\n    isSelectedItem,\n    stopPropagation,\n    closeSelection,\n  } = useHandleMultipleSelect(props);\n  const { title, selectedLength, restLength } = useMemo(() => {\n    if (selectedItems.length > 0) {\n      const [firstItem, ...rest] = selectedItems;\n      const title = <div className={classes.pill}>{firstItem.label}</div>;\n      return {\n        title,\n        restLength: rest.length,\n        selectedLength: selectedItems.length,\n      };\n    }\n    return { title: defaultTitle, restLength: 0, selectedLength: 0 };\n  }, [classes.pill, defaultTitle, selectedItems]);\n\n  return (\n    <ClickAwayListener onClickAway={closeSelection}>\n      <div className={baseClasses.selectWrapper}>\n        <Grid\n          container\n          justify=\"space-between\"\n          wrap=\"nowrap\"\n          className={clsx(baseClasses.selectHeader, {\n            'no-value': !selectedLength,\n          })}\n          onClick={handleToggle}\n        >\n          <Grid item className={baseClasses.selectHeaderTitle}>\n            {title}\n          </Grid>\n          <Grid item xs=\"auto\">\n            <Grid\n              container\n              className=\"icon\"\n              alignItems=\"center\"\n              justify=\"flex-end\"\n              spacing={1}\n              wrap=\"nowrap\"\n            >\n              {restLength > 0 && (\n                <>\n                  <Grid item>\n                    <span>...</span>\n                  </Grid>\n                  <Grid item>\n                    <span className={clsx(classes.pill, 'pill-primary')}>\n                      {restLength}\n                    </span>\n                  </Grid>\n                </>\n              )}\n              <Grid item>{open ? openIcon : closeIcon}</Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        {open && (\n          <ul className={baseClasses.selectList} onClick={stopPropagation}>\n            {selection.map((item: TItem) => {\n              const isSelected = isSelectedItem(item);\n              return (\n                <Grid\n                  container\n                  component=\"li\"\n                  justify={'space-between'}\n                  wrap=\"nowrap\"\n                  alignItems=\"center\"\n                  className={clsx(baseClasses.selectListItem, {\n                    selected: isSelected,\n                  })}\n                  key={`${item.value}-${item.label}`}\n                  onClick={handleSelectItem(item, isSelected)}\n                >\n                  <Grid item xs>\n                    {item.label}\n                  </Grid>\n                  {isSelected && (\n                    <Grid item xs={'auto'}>\n                      <CheckIcon color=\"primary\" />\n                    </Grid>\n                  )}\n                </Grid>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n    </ClickAwayListener>\n  );\n}\n\nconst CustomMultipleSelect = React.memo(\n  CustomMultipleSelectComponent\n) as typeof CustomMultipleSelectComponent & React.ComponentType<any>;\nCustomMultipleSelect.displayName = 'CustomMultipleSelect';\nexport default CustomMultipleSelect;\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}