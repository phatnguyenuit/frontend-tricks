{"version":3,"sources":["components/Table/utils.tsx","components/Table/index.tsx","pages/Table/index.tsx"],"names":["renderBody","data","columns","map","record","index","rowKey","key","renderCellContent","columnKey","content","renderCell","renderRow","Table","React","memo","props","tableProps","tableHeadProps","name","renderHeaderContent","cellContent","renderHeader","displayName","genderMapping","male","female","gender","id","TablePage","Typography","variant","component","MuiPaper"],"mappings":"0MAKO,SAASA,EACdC,EACAC,GAEA,OAAOD,EAAKE,KAAI,SAACC,EAAQC,GAAT,OAKX,SACLC,EACAJ,EACAE,EACAC,GAEA,OACE,kBAAC,IAAD,CAAaE,IAAKD,GACfJ,EAAQC,KACP,YAAoE,IAAjEK,EAAgE,EAAhEA,kBAAwBC,EAAwC,EAA7CF,IACdG,EAAUF,EACZA,EAAkBJ,EAAQC,GAC1BD,EAAOK,GACX,OAAOE,EAAW,MAAD,OAAOL,EAAP,YAAiBG,GAAaC,OAjBrDE,CAAU,MAAD,OAAOP,GAASH,EAASE,EAAQC,MA+BvC,SAASM,EAAWJ,EAAgBG,GACzC,OAAO,kBAAC,IAAD,CAAcH,IAAKA,GAAMG,GCnBlC,IAAMG,EAAQC,IAAMC,MAZb,SAAiCC,GAA6B,IAC3Df,EAA8Ce,EAA9Cf,KAAMC,EAAwCc,EAAxCd,QAASe,EAA+BD,EAA/BC,WAAYC,EAAmBF,EAAnBE,eACnC,OACE,kBAAC,IAAaD,EACZ,kBAAC,IAAiBC,EAChB,kBAAC,IAAD,KDkBD,SAA+BhB,GACpC,OAAOA,EAAQC,KAAI,YAAyC,IAAtCI,EAAqC,EAArCA,IAAKY,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,oBACzBC,EAAcD,EAAsBA,IAAwBD,EAClE,OAAOR,EAAW,MAAD,OAAOJ,GAAOc,MCrBbC,CAAapB,KAE7B,kBAAC,IAAD,KAAeF,EAAWC,EAAMC,QAOtCW,EAAMU,YAAc,QAELV,Q,kBCbTW,EAAwC,CAC5CC,KAAM,eACNC,OAAQ,gBAGJxB,EAAsC,CAC1C,CACEK,IAAK,MACLY,KAAM,MACNX,kBAAmB,SAACJ,EAAQC,GAAT,OAAmBA,EAAQ,IAEhD,CAAEE,IAAK,OAAQY,KAAM,QACrB,CACEZ,IAAK,SACLY,KAAM,SACNX,kBAAmB,SAACJ,GAAD,OAAYoB,EAAcpB,EAAOuB,WAIlD1B,EAAuB,CAC3B,CAAE2B,GAAI,EAAGT,KAAM,kBAAmBQ,OAAQ,QAC1C,CAAEC,GAAI,EAAGT,KAAM,iBAAkBQ,OAAQ,QACzC,CAAEC,GAAI,EAAGT,KAAM,iBAAkBQ,OAAQ,WAc5BE,UAXG,WAChB,OACE,6BACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,cACA,kBAAC,IAAD,CAAmBC,UAAWC,KAC5B,kBAAC,EAAD,CAAO/B,QAASA,EAASD,KAAMA","file":"static/js/7.a2a050a2.chunk.js","sourcesContent":["import React from 'react';\nimport MuiTableCell from '@material-ui/core/TableCell';\nimport MuiTableRow from '@material-ui/core/TableRow';\nimport { ColumnOptionsList, ColumnOptions } from './index';\n\nexport function renderBody<TRecord>(\n  data: Array<TRecord>,\n  columns: ColumnOptionsList<TRecord>,\n) {\n  return data.map((record, index) =>\n    renderRow(`tr-${index}`, columns, record, index),\n  );\n}\n\nexport function renderRow<TRecord>(\n  rowKey: React.Key,\n  columns: ColumnOptionsList<TRecord>,\n  record: TRecord,\n  index: number,\n) {\n  return (\n    <MuiTableRow key={rowKey}>\n      {columns.map(\n        ({ renderCellContent, key: columnKey }: ColumnOptions<TRecord>) => {\n          const content = renderCellContent\n            ? renderCellContent(record, index)\n            : record[columnKey as keyof TRecord];\n          return renderCell(`td-${rowKey}-${columnKey}`, content);\n        },\n      )}\n    </MuiTableRow>\n  );\n}\n\nexport function renderHeader<TRecord>(columns: ColumnOptionsList<TRecord>) {\n  return columns.map(({ key, name, renderHeaderContent }) => {\n    const cellContent = renderHeaderContent ? renderHeaderContent() : name;\n    return renderCell(`th-${key}`, cellContent);\n  });\n}\n\nexport function renderCell(key: React.Key, content: React.ReactNode) {\n  return <MuiTableCell key={key}>{content}</MuiTableCell>;\n}\n","import React from 'react';\nimport MuiTable, { TableProps as MuiTableProps } from '@material-ui/core/Table';\nimport MuiTableRow from '@material-ui/core/TableRow';\nimport MuiTableHead, {\n  TableHeadProps as MuiTableHeadProps,\n} from '@material-ui/core/TableHead';\nimport MuiTableBody from '@material-ui/core/TableBody';\nimport { TableCellProps } from '@material-ui/core/TableCell';\n\nimport { renderHeader, renderBody } from './utils';\n\nexport function TableComponent<TRecord>(props: TableProps<TRecord>) {\n  const { data, columns, tableProps, tableHeadProps } = props;\n  return (\n    <MuiTable {...tableProps}>\n      <MuiTableHead {...tableHeadProps}>\n        <MuiTableRow>{renderHeader(columns)}</MuiTableRow>\n      </MuiTableHead>\n      <MuiTableBody>{renderBody(data, columns)}</MuiTableBody>\n    </MuiTable>\n  );\n}\n\nconst Table = React.memo(TableComponent) as typeof TableComponent &\n  React.ComponentType<any>;\nTable.displayName = 'Table';\n\nexport default Table;\n\nexport interface TableProps<TRecord> {\n  data: Array<TRecord>;\n  columns: ColumnOptionsList<TRecord>;\n  tableProps?: ExcludeChildren<MuiTableProps>;\n  tableHeadProps?: ExcludeChildren<MuiTableHeadProps>;\n}\n\nexport interface ColumnOptions<TRecord> {\n  key: keyof TRecord | string;\n  name: React.ReactNode;\n  cellProps?: Partial<TableCellProps>;\n  cellHeadProps?: Partial<TableCellProps>;\n  renderCellContent?: ColumnRenderer<TRecord>;\n  renderHeaderContent?: HeaderRenderer;\n}\n\nexport type ColumnOptionsList<TRecord> = Array<ColumnOptions<TRecord>>;\nexport type ColumnRenderer<TRecord> = (\n  record: TRecord,\n  index: number,\n) => React.ReactNode;\nexport type HeaderRenderer = () => React.ReactNode;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Table, { ColumnOptionsList } from 'components/Table';\nimport MuiTableContainer from '@material-ui/core/TableContainer';\nimport MuiPaper from '@material-ui/core/Paper';\n\ntype Gender = 'female' | 'male';\n\ninterface TRecord {\n  id: number;\n  name: string;\n  gender: Gender;\n}\n\nconst genderMapping: Record<Gender, string> = {\n  male: 'ðŸ’ª',\n  female: 'ðŸ’…',\n};\n\nconst columns: ColumnOptionsList<TRecord> = [\n  {\n    key: 'stt',\n    name: 'STT',\n    renderCellContent: (record, index) => index + 1,\n  },\n  { key: 'name', name: 'Name' },\n  {\n    key: 'gender',\n    name: 'Gender',\n    renderCellContent: (record) => genderMapping[record.gender],\n  },\n];\n\nconst data: Array<TRecord> = [\n  { id: 1, name: 'Nguyen Tan Phat', gender: 'male' },\n  { id: 2, name: 'Nguyen Tan Tai', gender: 'male' },\n  { id: 2, name: 'Nguyen Thi Gai', gender: 'female' },\n];\n\nconst TablePage = () => {\n  return (\n    <div>\n      <Typography variant=\"h5\">Table Page</Typography>\n      <MuiTableContainer component={MuiPaper}>\n        <Table columns={columns} data={data} />\n      </MuiTableContainer>\n    </div>\n  );\n};\n\nexport default TablePage;\n"],"sourceRoot":""}