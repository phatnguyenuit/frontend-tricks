{"version":3,"sources":["components/CustomSelect/index.tsx","components/CustomSelect/styles.ts","components/CustomSelect/hooks.ts","components/CustomSelect/utils.ts","components/CustomSelect/CustomMultipleSelect/styles.ts","components/CustomSelect/CustomMultipleSelect/index.tsx","components/Loading/styles.ts","components/Loading/index.tsx","logo.svg","hooks/useLocalStorage.ts","theme/overrides/index.ts","theme/overrides/MuiTableHead.ts","theme/overrides/MuiTableCell.ts","theme/index.ts","constants/pages.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["DEFAULT_ICONS","closeIcon","openIcon","CustomSelect","React","memo","props","defaultTitle","selection","SelectIcons","classes","useStyles","useHandleSelect","open","handleToggle","handleSelectItem","isSelectedItem","stopPropagation","closeSelection","selectedItem","title","useMemo","label","onClickAway","className","selectWrapper","container","justify","wrap","clsx","selectHeader","onClick","item","selectHeaderTitle","xs","selectList","map","isSelected","component","alignItems","selectListItem","selected","key","value","displayName","makeStyles","theme","createStyles","position","userSelect","width","backgroundColor","border","borderRadius","spacing","color","cursor","height","padding","fontSize","lineHeight","overflow","marginRight","whiteSpace","textOverflow","boxShadow","fontWeight","listStyleType","margin","marginTop","maxHeight","overflowY","zIndex","classNamePrefix","useSelect","useState","setOpen","useCallback","e","onChange","defaultSelectedItem","setSelectedItem","item2","every","Boolean","isEqual","useHandleMultipleSelect","selectedItems","setSelectedItems","toUpdateItems","filter","i","some","push","includes","pill","display","textAlign","palette","primary","main","CustomMultipleSelect","baseClasses","baseUseStyles","length","firstItem","rest","restLength","selectedLength","ClickAwayListener","Grid","loadingContainer","left","top","transform","loader","borderTop","animation","Loading","module","exports","useLocalStorage","initialValue","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","String","setItem","stringify","MuiTableHead","root","MuiTableCell","head","createMuiTheme","overrides","pages","foo","lazy","name","loading","table","Object","keys","PAGES","DEFAULT_PAGE","App","lastPage","setLastPage","lastPageItem","find","page","setPage","onChangePage","Page","CssBaseline","href","target","rel","src","logo","alt","sm","md","Suspense","fallback","Box","mt","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c14f443d.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport clsx from 'clsx';\n\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grid from '@material-ui/core/Grid';\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp';\n\nimport { BaseItem, CustomSelectProps, SelectIcons } from './types';\nimport { useHandleSelect } from './hooks';\nimport useStyles from './styles';\n\nexport const DEFAULT_ICONS: SelectIcons = {\n  closeIcon: <KeyboardArrowDown />,\n  openIcon: <KeyboardArrowUp />,\n};\n\nexport function CustomSelectComponent<TItem extends BaseItem>(\n  props: CustomSelectProps<TItem>,\n) {\n  const {\n    defaultTitle,\n    selection,\n    SelectIcons: { openIcon, closeIcon } = DEFAULT_ICONS,\n  } = props;\n  const classes = useStyles();\n  const {\n    open,\n    handleToggle,\n    handleSelectItem,\n    isSelectedItem,\n    stopPropagation,\n    closeSelection,\n    selectedItem,\n  } = useHandleSelect(props);\n  const title = useMemo(() => selectedItem?.label || defaultTitle, [\n    defaultTitle,\n    selectedItem,\n  ]);\n\n  return (\n    <ClickAwayListener onClickAway={closeSelection}>\n      <div className={classes.selectWrapper}>\n        <Grid\n          container\n          justify=\"space-between\"\n          wrap=\"nowrap\"\n          className={clsx(classes.selectHeader, {\n            'no-value': !selectedItem,\n          })}\n          onClick={handleToggle}\n        >\n          <Grid item className={classes.selectHeaderTitle}>\n            {title}\n          </Grid>\n          <Grid item xs=\"auto\">\n            {open ? openIcon : closeIcon}\n          </Grid>\n        </Grid>\n        {open && (\n          <ul className={classes.selectList} onClick={stopPropagation}>\n            {selection.map((item: TItem) => {\n              const isSelected = isSelectedItem(item);\n              return (\n                <Grid\n                  container\n                  component=\"li\"\n                  justify={'space-between'}\n                  wrap=\"nowrap\"\n                  alignItems=\"center\"\n                  className={clsx(classes.selectListItem, {\n                    selected: isSelected,\n                  })}\n                  key={`${item.value}-${item.label}`}\n                  onClick={handleSelectItem(item)}\n                >\n                  <Grid item>{item.label}</Grid>\n                </Grid>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n    </ClickAwayListener>\n  );\n}\n\nconst CustomSelect = React.memo(\n  CustomSelectComponent,\n) as typeof CustomSelectComponent & React.ComponentType<any>;\nCustomSelect.displayName = 'CustomSelect';\nexport default CustomSelect;\n\nexport * from './types';\nexport { default as CustomMultipleSelect } from './CustomMultipleSelect';\n","import { Theme, createStyles, makeStyles } from '@material-ui/core';\n\nexport const styles = (theme: Theme) =>\n  createStyles({\n    selectWrapper: {\n      position: 'relative',\n      userSelect: 'none',\n      width: '100%',\n    },\n    selectHeader: {\n      backgroundColor: '#f2f3f4',\n      border: '1px solid #cfd2d4',\n      borderRadius: theme.spacing(1 / 2),\n      color: '#3f4b53',\n      cursor: 'default',\n      height: 40,\n      padding: theme.spacing(1, 2),\n      position: 'relative',\n\n      '&.no-value': {\n        color: '#b7bbbf',\n        fontSize: 14,\n        lineHeight: 1.29,\n        overflow: 'hidden',\n      },\n    },\n    selectHeaderTitle: {\n      lineHeight: '24px',\n      marginRight: theme.spacing(1 / 2),\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n    },\n    selectList: {\n      backgroundColor: '#ffffff',\n      borderRadius: theme.spacing(1 / 2),\n      boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.1)',\n      fontWeight: 700,\n      listStyleType: 'none',\n      margin: 0,\n      marginTop: theme.spacing(1),\n      maxHeight: 300,\n      overflowY: 'auto',\n      padding: 0,\n      position: 'absolute',\n      width: '100%',\n      zIndex: 10,\n    },\n    selectListItem: {\n      width: '100%',\n      fontSize: 14,\n      padding: theme.spacing(2),\n      lineHeight: 1.29,\n      color: '#6f787e',\n      cursor: 'default',\n      height: '48px',\n      backgroundColor: '#ffffff',\n      '&:hover': {\n        backgroundColor: '#f2f3f4',\n      },\n      '& > div': {\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n      },\n      '&.selected': {\n        color: '#3f4b53',\n        backgroundColor: '#f2f3f4',\n      },\n    },\n  });\n\nexport default makeStyles(styles, { classNamePrefix: 'CustomSelect' });\n","import { useState, useCallback } from 'react';\nimport {\n  BaseItem,\n  CustomSelectProps,\n  CustomMultipleSelectProps,\n} from './types';\nimport { isEqual } from './utils';\n\nexport const useSelect = () => {\n  const [open, setOpen] = useState(false);\n  const handleToggle = useCallback(() => {\n    setOpen(!open);\n  }, [open]);\n\n  const stopPropagation = useCallback<\n    React.MouseEventHandler<HTMLUListElement>\n  >((e) => e.stopPropagation(), []);\n  const closeSelection = useCallback(() => setOpen(false), []);\n\n  return {\n    open,\n    setOpen,\n    handleToggle,\n    closeSelection,\n    stopPropagation,\n  };\n};\n\nexport const useHandleSelect = <TItem extends BaseItem>(\n  props: CustomSelectProps<TItem>,\n) => {\n  const { onChange, selectedItem: defaultSelectedItem } = props;\n  const {\n    open,\n    setOpen,\n    handleToggle,\n    closeSelection,\n    stopPropagation,\n  } = useSelect();\n  const [selectedItem = defaultSelectedItem, setSelectedItem] = useState<\n    TItem\n  >();\n  const handleSelectItem = useCallback(\n    (item: TItem) => () => {\n      setOpen(false);\n      setSelectedItem(item);\n      onChange(item);\n    },\n    [onChange, setOpen],\n  );\n  const isSelectedItem = useCallback(\n    (item: TItem) => isEqual(item, selectedItem),\n    [selectedItem],\n  );\n  return {\n    open,\n    selectedItem,\n    isSelectedItem,\n    setOpen,\n    handleToggle,\n    handleSelectItem,\n    closeSelection,\n    stopPropagation,\n  };\n};\n\nexport const useHandleMultipleSelect = <TItem extends BaseItem>(\n  props: CustomMultipleSelectProps<TItem>,\n) => {\n  const { onChange, selectedItem: defaultSelectedItem = [] } = props;\n  const {\n    open,\n    setOpen,\n    handleToggle,\n    closeSelection,\n    stopPropagation,\n  } = useSelect();\n  const [selectedItems = [], setSelectedItems] = useState<Array<TItem>>(\n    defaultSelectedItem,\n  );\n  const handleSelectItem = useCallback(\n    (item: TItem, selected: boolean = false) => () => {\n      let toUpdateItems = [...selectedItems];\n      if (selected) {\n        toUpdateItems = toUpdateItems.filter((i) =>\n          [i.label !== item.label, i.value !== item.value].some(Boolean),\n        );\n      } else {\n        toUpdateItems.push(item);\n      }\n      setSelectedItems(toUpdateItems);\n      onChange(toUpdateItems);\n    },\n    [onChange, selectedItems],\n  );\n  const isSelectedItem = useCallback(\n    (item: TItem) => {\n      return selectedItems.includes(item);\n    },\n    [selectedItems],\n  );\n  return {\n    open,\n    selectedItems,\n    isSelectedItem,\n    setOpen,\n    handleToggle,\n    handleSelectItem,\n    closeSelection,\n    stopPropagation,\n  };\n};\n","import { BaseItem } from './types';\n\nexport const isEqual = <TItem extends BaseItem>(item: TItem, item2?: TItem) => {\n  if (!item2) return false;\n  return [item.label === item2.label, item.value === item2.value].every(\n    Boolean,\n  );\n};\n","import { Theme, createStyles, makeStyles } from '@material-ui/core';\n\nexport const styles = (theme: Theme) =>\n  createStyles({\n    pill: {\n      width: '100%',\n      backgroundColor: '#cfd2d4',\n      borderRadius: theme.spacing(1 / 2),\n      display: 'inline-block',\n      fontSize: 12,\n      fontWeight: 'bold',\n      lineHeight: 1.33,\n      overflow: 'hidden',\n      padding: theme.spacing(1 / 2, 1),\n      textAlign: 'center',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      '&.pill-primary': {\n        backgroundColor: theme.palette.primary.main,\n        fontWeight: 'bold',\n        color: '#ffffff',\n      },\n    },\n  });\n\nexport default makeStyles(styles, { classNamePrefix: 'CustomMultipleSelect' });\n","import React, { useMemo } from 'react';\nimport clsx from 'clsx';\n\nimport CheckIcon from '@material-ui/icons/Check';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grid from '@material-ui/core/Grid';\n\nimport { BaseItem, CustomMultipleSelectProps } from '../types';\nimport { DEFAULT_ICONS } from '../index';\nimport { useHandleMultipleSelect } from '../hooks';\nimport useStyles from './styles';\nimport baseUseStyles from '../styles';\n\nexport function CustomMultipleSelectComponent<TItem extends BaseItem>(\n  props: CustomMultipleSelectProps<TItem>,\n) {\n  const {\n    defaultTitle,\n    selection,\n    SelectIcons: { openIcon, closeIcon } = DEFAULT_ICONS,\n  } = props;\n  const baseClasses = baseUseStyles();\n  const classes = useStyles();\n  const {\n    open,\n    selectedItems,\n    handleToggle,\n    handleSelectItem,\n    isSelectedItem,\n    stopPropagation,\n    closeSelection,\n  } = useHandleMultipleSelect(props);\n  const { title, selectedLength, restLength } = useMemo(() => {\n    if (selectedItems.length > 0) {\n      const [firstItem, ...rest] = selectedItems;\n      const title = <div className={classes.pill}>{firstItem.label}</div>;\n      return {\n        title,\n        restLength: rest.length,\n        selectedLength: selectedItems.length,\n      };\n    }\n    return { title: defaultTitle, restLength: 0, selectedLength: 0 };\n  }, [classes.pill, defaultTitle, selectedItems]);\n\n  return (\n    <ClickAwayListener onClickAway={closeSelection}>\n      <div className={baseClasses.selectWrapper}>\n        <Grid\n          container\n          justify=\"space-between\"\n          wrap=\"nowrap\"\n          className={clsx(baseClasses.selectHeader, {\n            'no-value': !selectedLength,\n          })}\n          onClick={handleToggle}\n        >\n          <Grid item className={baseClasses.selectHeaderTitle}>\n            {title}\n          </Grid>\n          <Grid item xs=\"auto\">\n            <Grid\n              container\n              className=\"icon\"\n              alignItems=\"center\"\n              justify=\"flex-end\"\n              spacing={1}\n              wrap=\"nowrap\"\n            >\n              {restLength > 0 && (\n                <>\n                  <Grid item>\n                    <span>...</span>\n                  </Grid>\n                  <Grid item>\n                    <span className={clsx(classes.pill, 'pill-primary')}>\n                      {restLength}\n                    </span>\n                  </Grid>\n                </>\n              )}\n              <Grid item>{open ? openIcon : closeIcon}</Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        {open && (\n          <ul className={baseClasses.selectList} onClick={stopPropagation}>\n            {selection.map((item: TItem) => {\n              const isSelected = isSelectedItem(item);\n              return (\n                <Grid\n                  container\n                  component=\"li\"\n                  justify={'space-between'}\n                  wrap=\"nowrap\"\n                  alignItems=\"center\"\n                  className={clsx(baseClasses.selectListItem, {\n                    selected: isSelected,\n                  })}\n                  key={`${item.value}-${item.label}`}\n                  onClick={handleSelectItem(item, isSelected)}\n                >\n                  <Grid item xs>\n                    {item.label}\n                  </Grid>\n                  {isSelected && (\n                    <Grid item xs={'auto'}>\n                      <CheckIcon color=\"primary\" />\n                    </Grid>\n                  )}\n                </Grid>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n    </ClickAwayListener>\n  );\n}\n\nconst CustomMultipleSelect = React.memo(\n  CustomMultipleSelectComponent,\n) as typeof CustomMultipleSelectComponent & React.ComponentType<any>;\nCustomMultipleSelect.displayName = 'CustomMultipleSelect';\nexport default CustomMultipleSelect;\n","import { Theme, createStyles, makeStyles } from '@material-ui/core';\n\nexport const styles = (theme: Theme) =>\n  createStyles({\n    loadingContainer: {\n      left: '50%',\n      position: 'absolute',\n      top: '50%',\n      transform: 'translate(-50%, -50%)',\n    },\n    loader: {\n      border: '3px solid #cfd2d4',\n      borderRadius: '50%',\n      borderTop: `3px solid ${theme.palette.primary.main}`,\n      width: '64px',\n      height: '64px',\n      animation: '$spin 2s linear infinite',\n    },\n    '@keyframes spin': {\n      '0%': { transform: 'rotate(0deg)' },\n      '100%': { transform: 'rotate(1turn)' },\n    },\n  });\n\nexport default makeStyles(styles, { classNamePrefix: 'Loading' });\n","import React from 'react';\nimport useStyles from './styles';\n\nexport const LoadingCompoent = () => {\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.loadingContainer}>\n        <div className={classes.loader}></div>\n      </div>\n    </div>\n  );\n};\n\nconst Loading = React.memo(LoadingCompoent);\nLoading.displayName = 'Loading';\n\nexport default Loading;\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { useState } from 'react';\n\nfunction useLocalStorage<T>(\n  key: string,\n  initialValue: T,\n): [string, (value: T) => void] {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<string>(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: T) => {\n    try {\n      // Save state\n      setStoredValue(String(value));\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import MuiTableHead from './MuiTableHead';\nimport MuiTableCell from './MuiTableCell';\n\nexport default {\n  MuiTableHead,\n  MuiTableCell,\n};\n","import { StyleRules } from '@material-ui/core';\nimport { TableHeadClassKey } from '@material-ui/core/TableHead';\n\nconst MuiTableHead: Partial<StyleRules<TableHeadClassKey>> = {\n  root: {\n    backgroundColor: '#000000',\n  },\n};\n\nexport default MuiTableHead;\n","import { StyleRules } from '@material-ui/core';\nimport { TableCellClassKey } from '@material-ui/core/TableCell';\n\nconst MuiTableCell: Partial<StyleRules<TableCellClassKey>> = {\n  head: {\n    fontWeight: 'bold',\n    color: '#ffffff',\n  },\n};\n\nexport default MuiTableCell;\n","import { createMuiTheme } from '@material-ui/core';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  overrides\n});\n\nexport default theme;","import React from 'react';\n\ntype PageProps = {\n  name: string;\n  component: ReactLazyComponent;\n};\n\nconst pages: Record<string, PageProps> = {\n  foo: {\n    component: React.lazy(() => import('pages/Foo')),\n    name: 'Foo Component',\n  },\n  loading: {\n    component: React.lazy(() => import('pages/Loading')),\n    name: 'Loading Component',\n  },\n  table: {\n    component: React.lazy(() => import('pages/Table')),\n    name: 'Table Component',\n  },\n  CustomSelect: {\n    component: React.lazy(() => import('pages/CustomSelect')),\n    name: 'CustomSelect',\n  },\n};\n\nexport default pages;\n","import React from 'react';\n\nimport { MuiThemeProvider } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\n\nimport GitHubCorner from 'react-github-corner';\n\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport theme from 'theme';\nimport PAGES from 'constants/pages';\n\nimport Loading from 'components/Loading';\nimport CustomSelect, { BaseItem } from 'components/CustomSelect';\n\nimport logo from './logo.svg';\nimport './App.css';\n\ninterface PageItem extends BaseItem {\n  component: ReactLazyComponent;\n}\n\nconst pages: Array<PageItem> = Object.keys(PAGES).map((key) => ({\n  value: key,\n  label: PAGES[key].name,\n  component: PAGES[key].component,\n}));\n\nconst DEFAULT_PAGE = pages[0];\n\nconst App: React.FC = () => {\n  const [lastPage, setLastPage] = useLocalStorage('page', DEFAULT_PAGE.value);\n  const lastPageItem = React.useMemo(() => {\n    return pages.find((page) => page.value === lastPage);\n  }, [lastPage]);\n  const [page, setPage] = React.useState(lastPageItem);\n  const onChangePage = React.useCallback(\n    (selected: PageItem) => {\n      setPage(selected);\n      setLastPage(String(selected.value));\n    },\n    [setPage, setLastPage]\n  );\n  const Page = (page || DEFAULT_PAGE).component;\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            Learn React!\n          </a>\n          <GitHubCorner href=\"https://github.com/phatnguyenuit/frontend-tricks\" />\n        </header>\n        <main className=\"App-content\">\n          <Grid container spacing={1} alignItems=\"center\">\n            <Grid item xs=\"auto\">\n              Choose page to show:\n            </Grid>\n            <Grid item xs sm={6} md={2}>\n              <CustomSelect\n                defaultTitle=\"Choose Page\"\n                selection={pages}\n                selectedItem={page}\n                onChange={onChangePage}\n              />\n            </Grid>\n          </Grid>\n          <React.Suspense fallback={<Loading />}>\n            <Box mt={2}>\n              <Page />\n            </Box>\n          </React.Suspense>\n        </main>\n      </div>\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}